name: Release Model Service

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*.*.*'  
  pull_request:
    branches:
      - 'main'


jobs:
  linting:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.11

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Install dependencies
      run: poetry install

    - name: Pylint source directories
      run: poetry run pylint $(git ls-files '*.py')
    
    - name: Lint with flake8
      run: poetry run flake8 .

  build-and-push:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4
    - id: lower-repo
      name: Repository to lowercase
      run: |
        echo "repository=${GITHUB_REPOSITORY@L}" >> $GITHUB_OUTPUT

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Install dependencies
      run: poetry install
      
    - name: Registry Login (ghcr.io)
      run: |
        echo "${{secrets.GHR_TOKEN}}" | docker login ghcr.io -u ${{github.actor}} --password-stdin

    - name: Parse version info from tag
      run: |
        VERSION=${GITHUB_REF:11}
        MAJOR=`echo "$VERSION" | cut -d . -f 1`
        MINOR=`echo "$VERSION" | cut -d . -f 2`
        PATCH=`echo "$VERSION" | cut -d . -f 3`
        echo "version=$VERSION" >> $GITHUB_ENV
        echo "version_major=$MAJOR" >> $GITHUB_ENV
        echo "version_minor=$MINOR" >> $GITHUB_ENV
        echo "version_patch=$PATCH" >> $GITHUB_ENV
    
    - name: Build and Push Docker Image
      run: |
        IMG=ghcr.io/${{steps.lower-repo.outputs.repository}}
        docker build \
          --tag $IMG:${{env.version}} \
          --tag $IMG:${{env.version_major}}.${{env.version_minor}}.latest \
          --tag $IMG:${{env.version_major}}.latest \
          --tag $IMG:latest \
          .
        docker push --all-tags $IMG       
